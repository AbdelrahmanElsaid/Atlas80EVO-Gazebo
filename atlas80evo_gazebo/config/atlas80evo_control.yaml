## Joint State Controller
#joint_state_controller:
#  type: "joint_state_controller/JointStateController"
#  publish_rate: 50.0

# Wheel Odometry - DiffDriveController
mobile_base_controller:
  type        : "diff_drive_controller/DiffDriveController"
  left_wheel  : "left_wheel_joint"
  right_wheel : "right_wheel_joint"
  publish_rate: 50.0
  pose_covariance_diagonal : [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
  twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
#  velocity_rolling_window_size: 2
  # Frame_ids
  odom_frame_id: odom
  base_frame_id: base_link
  # Velocity commands timeout [s]
  cmd_vel_timeout: 0.25
  # Odometry fused with IMU is published by robot_localization,
  # so no need to publish a TF based on encoders alone.
  enable_odom_tf: false
  # Atlas80evo hardware provides wheel velocities
  estimate_velocity_from_position: false
  # Wheel separation & radius and Separation & Radius multipliers
  wheel_separation: 0.7
  wheel_radius:     0.1275
  wheel_separation_multiplier: 1.2245 # 1.225 -value big, understeer; value small, oversteer
  wheel_radius_multiplier:     1.0 # 1.0
  # Velocity and Acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  linear:
    x:
      has_velocity_limits    : true
      max_velocity           : 1.5    # [m/s]
      min_velocity           : -1.5   # [m/s]
      has_acceleration_limits: true
      max_acceleration       : 2.0    # [m/s^2]
      min_acceleration       : -10.0  # [m/s^2]
  angular:
    z:
      has_velocity_limits    : true
      max_velocity           : 2.0    # [rad/s]
      min_velocity           : -2.0   # [rad/s]
      has_acceleration_limits: true
      max_acceleration       : 2.5    # [rad/s^2]
      min_acceleration       : -2.5   # [rad/s^2]


## Lifter - JointPositionController
#lifter:
#  joints: 
#    - lifter_joint
##  type: "position_controllers/JointPositionController"
#  type: "position_controllers/JointTrajectoryController"
##  type: "effort_controllers/JointTrajectoryController"
#  gains: 
#    lifter_joint: {p: 100,i: 0, d: 0, i_clamp: 1}

# Gazebo ROS Control with PID on joints
#gazebo_ros_control/pid_gains:
#  left_wheel: {p: 100.0, i: 0.01, d: 10.0}
#  right_wheel: {p: 100.0, i: 0.01, d: 10.0}
#  lifter_joint: {p: 10000.0, i: 0.0, d: 10.0}


